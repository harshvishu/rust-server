on: [push]

name: Continuous integration

jobs:
  #check:
  #  name: Check
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true
  #    - uses: actions-rs/cargo@v1
  #      with:
  #        command: check

  #test:
  #  name: Test Suite
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true
  #    - uses: actions-rs/cargo@v1
  #      with:
  #        command: test

  #fmt:
  #  name: Rustfmt
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true
  #    - run: rustup component add rustfmt
  #    - uses: actions-rs/cargo@v1
  #      with:
  #        command: fmt
  #        args: --all -- --check

  #clippy:
  #  name: Clippy
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        profile: minimal
  #        toolchain: stable
  #        override: true
  #    - run: rustup component add clippy
  #    - uses: actions-rs/cargo@v1
  #      with:
  #        command: clippy
  #        #args: -- -D warnings
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - powerpc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - run: pwd 
      - run: ls -ltR 
      - uses: actions/upload-artifact@v3
        with:
          name: "my-artifact-${{ matrix.target }}"
          path: "target/${{ matrix.target }}/release"
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
